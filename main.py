# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫
from aiogram import Bot, types, Dispatcher, executor
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, CallbackQuery

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –∫–ª–∞—Å—Å–æ–≤ Bot –∏ Dispatcher
token = 'TOKEN'  # –°—é–¥–∞ –≤–º–µ—Å—Ç–æ TOKEN –Ω—É–∂–Ω–æ –≤—Å—Ç–∞–≤–ª—è—Ç—å —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
bot = Bot(token)
dp = Dispatcher(bot)


# –§—É–Ω–∫—Ü–∏—è, –æ–±—ä—è–≤–ª—è—é—â–∞—è –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def on_startup(_):
    print('–Ø –∑–∞–ø—É—Å—Ç–∏–ª—Å—è!')




@dp.message_handler(commands=['start'])  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def start(message: types.Message):  # –§—É–Ω–∫—Ü–∏—è start
    ikb = InlineKeyboardMarkup(row_width=2)  # –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∏ –∫–Ω–æ–ø–∫–∏ —Å —Ç–µ–∫—Å—Ç–æ–º –∏ —Å—Å—ã–ª–∫–æ–π
    ikb.add(InlineKeyboardButton('Zegich', url='https://t.me/+imjtN9g5PFdhMzZi'))
    ikb.add(InlineKeyboardButton('–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è!‚úÖ', callback_data='prov')) #–ó–¥–µ—Å—å –≤–º–µ—Å—Ç–æ —Å—Å—ã–ª–∫–∏ –ø—Ä–∏–∫—Ä–µ–ø–ª—è—é callback –¥–∞–Ω–Ω—ã–µ
    #–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –Ω–∞—á–∞–ª—å–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º
    await message.answer('''
    –ü—Ä–∏–≤–µ—Çüñê, —Ç–µ–±—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±–æ—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º Zegichüê∏.
–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–±—â–µ–Ω–∏–µ —Å –±–æ—Ç–æ–º, –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –µ–≥–æ Telegram –∫–∞–Ω–∞–ª‚úÖ.
    ''', reply_markup=ikb)


#–û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –∑–∞–ø—Ä–æ—Å–æ–≤
@dp.callback_query_handler()
async def proverka(callback: types.CallbackQuery): #–§—É–Ω–∫—Ü–∏—è proverka
    if callback.data == 'prov': #–ï—Å–ª–∏ callback –¥–∞–Ω–Ω—ã–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç, —Ç–æ –±–æ—Ç –¥–µ–ª–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É
        user_channel_status = await bot.get_chat_member(chat_id=-1001930581929, user_id = callback.from_user.id) #–°—é–¥–∞ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –∏–∑ —á–∞—Ç–∞
        if user_channel_status["status"] != 'left':  #–ï—Å–ª–∏ –∫—É—Å–æ–∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–π —Å—Ç—Ä–æ–∫–∏ –Ω–µ —Ä–∞–≤–µ–Ω left, —Ç–æ –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ
            await callback.message.answer('–¢—ã –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ –∫–∞–Ω–∞–ª!ü•≥')
        else: #–ï—Å–ª–∏ –∂–µ —Ä–∞–≤–Ω–æ, —Ç–æ –≤—ã–≤–æ–¥–∏—Ç—Å—è —Ç–∞–±–ª–∏—á–∫–∞
            await callback.answer('–¢—ã –µ—â—ë –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª—Å—è!‚ùå', show_alert=True)



if __name__ == "__main__":  # –£—Å–ª–æ–≤–∏–µ, –µ—Å–ª–∏ –∫–æ–¥ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ, —Ç–æ –±–æ—Ç —Å—Ç–∞—Ä—Ç—É–µ—Ç
    executor.start_polling(dp, on_startup=on_startup, skip_updates=True)
